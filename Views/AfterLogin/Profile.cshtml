@model ZUVO_MVC_.Models.Users
@Html.AntiForgeryToken()
@{
    ViewData["Title"] = "Profile";
}
@{
    Layout = null;
    IgnoreBody();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            overflow: hidden;
            font-family: Arial, sans-serif;
        }

        .profile-page {
            display: flex;
            height: 100vh;
        }

        .sidebar {
            width: 25%;
            background: #E2D1AC;
            padding: 20px;
            box-sizing: border-box;
            height: 100vh;
            position: fixed;
            top: 0;
            left: 0;
            text-align: center;
            border-radius: 10px;
            overflow: hidden;
        }

        .main-content {
            margin-left: 25%;
            width: 75%;
            height: 100vh;
            overflow-y: auto;
            background: #D9C9A3;
            padding: 20px;
            box-sizing: border-box;
            border-radius: 10px;
        }

        .navbar {
            background-color: #D9C9A3;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .container {
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo-section {
            display: flex;
            align-items: center;
        }

        .logo {
            height: 40px;
        }

        .title {
            font-size: 20px;
            font-weight: bold;
            margin-left: 10px;
        }

        .nav-buttons {
            display: flex;
            align-items: center;
        }

        .btn {
            background-color: #3D2C1D;
            color: white;
            border: none;
            padding: 8px 15px;
            margin-right: 10px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 14px;
        }

            .btn:hover {
                background-color: #2B1D13;
            }

        .profile-icon {
            height: 40px;
            cursor: pointer;
            border-radius: 50%;
        }

        .profile-pic img {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            cursor: pointer;
        }

        .profile-pic h3,
        .profile-pic p {
            margin: 5px 0;
            font-size: 14px;
        }

        .edit-icons {
            display: flex;
            justify-content: center;
            margin: 10px 0;
        }

        .edit-btn, .verify-btn {
            background: #3D2C1D;
            color: white;
            border: none;
            padding: 8px;
            margin: 5px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 16px;
        }

        .nav-btn {
            display: block;
            width: 100%;
            background: #3D2C1D;
            color: white;
            border: none;
            padding: 10px;
            margin: 8px 0;
            cursor: pointer;
            border-radius: 5px;
            text-align: left;
        }

        h2 {
            text-align: center;
            color: #3D2C1D;
        }

        .info-section, .License {
            background: white;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
        }

        h3 {
            color: #3D2C1D;
            margin-bottom: 10px;
        }

        label {
            font-weight: bold;
            display: block;
            margin-top: 10px;
        }

        input {
            width: 100%;
            padding: 8px;
            border: 1px solid #CCC;
            border-radius: 5px;
            background-color: #F7F3E9;
            margin-top: 5px;
        }

        .link-wallet {
            background: #3D2C1D;
            color: white;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 14px;
        }

        .balance-section {
            display: flex;
            justify-content: space-between;
            background: #D9C9A3;
            padding: 10px;
            border-radius: 5px;
            font-size: 16px;
            font-weight: bold;
            margin-top: 10px;
        }

        .transaction {
            display: flex;
            align-items: center;
            background: #3D2C1D;
            padding: 10px;
            border-radius: 10px;
            color: white;
            margin-top: 10px;
        }

            .transaction img {
                width: 60px;
                height: 40px;
                border-radius: 5px;
                margin-right: 15px;
            }

        .transaction-details {
            flex-grow: 1;
        }

        .download-invoice {
            background: #E2D1AC;
            color: black;
            border: none;
            padding: 8px 10px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 12px;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

            .modal-content img {
                width: 100%;
                height: auto;
            }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>
<body>
    <section>
        <nav class="navbar">
            <div class="container">
                <div class="logo-section">
                    <img src="~/images/Designer__2_-removebg-preview 1.png" alt="Zuvo Logo" class="logo">
                    <span class="title">My Account</span>
                </div>
                <div class="nav-buttons">
                    <a asp-controller="Host" asp-action="BecomeHost">
                        <button class="btn">Become a Host</button>
                    </a>
                        

                </div>
            </div>
        </nav>
    </section>
    <section id="profile">
        <div class="profile-container profile-page">
            <div class="sidebar">
                <div class="profile-pic">
                    @{
                        var profilePicPath = string.IsNullOrEmpty(Model?.ProfilePicPath) ? 
                            "~/images/account-circle.png" : 
                            (Model.ProfilePicPath.StartsWith("~") ? Model.ProfilePicPath : $"~{Model.ProfilePicPath}");
                        
                        <text><!-- Debug Info: Model?.ProfilePicPath = @(Model?.ProfilePicPath ?? "null") --></text>
                        <text><!-- Debug Info: Final Path = @profilePicPath --></text>
                    }
                    <img src="@Url.Content(profilePicPath)" alt="Profile Picture" onclick="openModal()">
                    <h3>@(Model?.FullName ?? "Name not available")</h3>
                    <p>@(Model?.PhoneNumber ?? "Phone number not available")</p>
                    <p>@(Model?.Email ?? "Email not available")</p>
                </div>
                <div class="edit-icons">
                    <button class="edit-btn" onclick="enableEdit()" aria-label="Edit Profile">✎</button>
                    <button class="verify-btn" onclick="saveChanges()" aria-label="Save Changes">✔</button>
                </div>
                <nav class="side-nav">
                    <button class="nav-btn" onclick="scrollToSection('personal-info')">Personal Information</button>
                    <button class="nav-btn" onclick="scrollToSection('driving-license')">Driving License</button>
                    <button class="nav-btn" onclick="scrollToSection('payment-billing')">Payment & Billing</button>
                    <button class="nav-btn" onclick="scrollToSection('bookings')">Bookings</button>
                </nav>
            </div>
            <div class="main-content">
                <h2>Personal Information</h2>
                <div class="info-section" id="personal-info">
                    <h3>Account Details</h3>
                    <label>Email</label>
                    <input type="email" id="email" value="@(Model?.Email ?? "Not available")" disabled />
                    <label>Mobile</label>
                    <input type="text" id="mobile" value="@(Model?.PhoneNumber ?? "Not available")" disabled />
                    <label>Username</label>
                    <input type="text" id="username" value="@(Model?.UserName ?? "Not available")" disabled />
                </div>
                <div class="info-section">
                    <h3>Personal Details</h3>
                    <label>Name</label>
                    <input type="text" id="fullName" value="@(Model?.FullName ?? "Not available")" disabled />
                    <label>Gender</label>
                    <input type="text" id="gender" value="@(Model?.Gender ?? "Not available")" disabled />
                    <label>Date of Birth</label>
                    <input type="text" id="dateOfBirth" value="@(Model?.DateOfBirth ?? "Not available")" disabled />
                    <label>Address</label>
                    <input type="text" id="address" value="@(Model?.Address ?? "Not available")" disabled />
                </div>
                <h2>Driving License Information</h2>
                <div class="License" id="driving-license">
                    <label>License No</label>
                    <input type="text" id="licenseNo" value="@(Model?.LicenseNo ?? "Not available")" disabled />
                    <label>Issue State</label>
                    <input type="text" id="issueState" value="@(Model?.IssueState ?? "Not available")" disabled />
                    <label>Expiry Date</label>
                    <input type="text" id="expiryDate" value="@(Model?.ExpiryDate ?? "Not available")" disabled />
                    <label>Upload Photo</label>
                    <input type="text" id="uploadPhoto" value="@(Model?.UploadPhoto ?? "Not available")" disabled />
                </div>
                <h2>Payment And Billing</h2>
                <div class="info-section" id="payment-billing">
                    <h3>PAYTM WALLET</h3>
                    <p>Wallet Status : <span id="walletStatus" style="font-weight: bold;">Not Linked</span></p>
                    <button class="link-wallet" onclick="linkWallet()">Link Wallet</button>
                    <div class="balance-section">
                        <span>Balance</span>
                        <span id="walletBalance">💰 0</span>
                    </div>
                </div>
                <div class="info-section">
                    <h3>Transactions</h3>
                    <div class="transaction" id="bookings">
                        <img src="~/images/Blue_baleno.png" alt="Car Rental">
                        <div class="transaction-details">
                            <p><b>12345667</b></p>
                            <p>26 Jan – 28 Jan</p>
                            <p>5000 Paid</p>
                            <p>Paypal</p>
                        </div>
                        <button class="download-invoice">Download Invoice</button>
                    </div>
                    <div class="transaction">
                        <img src="~/images/grey_ertiga-removebg-preview 1.png" alt="Car Rental">
                        <div class="transaction-details">
                            <p><b>12345667</b></p>
                            <p>26 Jan – 28 Jan</p>
                            <p>5000 Paid</p>
                            <p>Paypal</p>
                        </div>
                        <button class="download-invoice">Download Invoice</button>
                    </div>
                </div>
                <h2>Bookings</h2>
                <div class="transaction">
                    <img src="~/images/grey_ertiga-removebg-preview 1.png" alt="Car Rental">
                    <div class="transaction-details">
                        <p><b>12345667</b></p>
                        <p>26 Jan – 28 Jan</p>
                        <p>5000 Paid</p>
                        <p>Paypal</p>
                    </div>
                    <button class="download-invoice">Download Invoice</button>
                </div>
                <div class="transaction">
                    <img src="~/images/grey_ertiga-removebg-preview 1.png" alt="Car Rental">
                    <div class="transaction-details">
                        <p><b>12345667</b></p>
                        <p>26 Jan – 28 Jan</p>
                        <p>5000 Paid</p>
                        <p>Paypal</p>
                    </div>
                    <button class="download-invoice">Download Invoice</button>
                </div>
                <div class="transaction">
                    <img src="~/images/grey_ertiga-removebg-preview 1.png" alt="Car Rental">
                    <div class="transaction-details">
                        <p><b>12345667</b></p>
                        <p>26 Jan – 28 Jan</p>
                        <p>5000 Paid</p>
                        <p>Paypal</p>
                    </div>
                    <button class="download-invoice">Download Invoice</button>
                </div>
            </div>
        </div>
    </section>

    <!-- Modal for Profile Picture -->
    <div id="profilePicModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <img id="enlargedProfilePic" src="@Url.Content(string.IsNullOrEmpty(Model?.ProfilePicPath) ? "~/images/account-circle.png" : (Model.ProfilePicPath.StartsWith("~") ? Model.ProfilePicPath : $"~{Model.ProfilePicPath}"))" alt="Enlarged Profile Picture">
            <br>
            <input type="file" id="profilePicInput" accept="image/*">
            <button onclick="uploadProfilePic()">Change Profile Picture</button>
        </div>
    </div>

    <script>
        // All functions globally accessible
        function openModal() {
            document.getElementById('profilePicModal').style.display = 'block';
            document.getElementById('enlargedProfilePic').src = document.querySelector('.profile-pic img').src;
        }

        function closeModal() {
            document.getElementById('profilePicModal').style.display = 'none';
        }

        function uploadProfilePic() {
            const fileInput = document.getElementById('profilePicInput');
            const file = fileInput.files[0];
            if (!file) {
                alert('Please select a file.');
                return;
            }

            const formData = new FormData();
            formData.append('profilePic', file);
            formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

            fetch('/AfterLogin/UploadProfilePic', {
                method: 'POST',
                body: formData
            }).then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.path) {
                    alert('Profile picture updated successfully!');
                    const newPath = data.path.startsWith('/') ? data.path : `/${data.path}`;
                    document.querySelector('.profile-pic img').src = newPath;
                    document.getElementById('enlargedProfilePic').src = newPath;
                    closeModal();
                } else {
                    throw new Error('Invalid response format');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating the profile picture: ' + error.message);
            });
        }

        function enableEdit() {
            document.querySelectorAll('input').forEach(input => {
                input.disabled = false;
            });
        }

        function saveChanges() {
            document.querySelectorAll('input').forEach(input => {
                input.disabled = true;
            });

            const data = {
                FullName: document.getElementById('fullName').value,
                PhoneNumber: document.getElementById('mobile').value,
                Email: document.getElementById('email').value,
                UserName: document.getElementById('username').value,
                Gender: document.getElementById('gender').value,
                DateOfBirth: document.getElementById('dateOfBirth').value,
                Address: document.getElementById('address').value,
                LicenseNo: document.getElementById('licenseNo').value,
                IssueState: document.getElementById('issueState').value,
                ExpiryDate: document.getElementById('expiryDate').value,
                UploadPhoto: document.getElementById('uploadPhoto').value
            };

            fetch('/AfterLogin/UpdateProfile', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            }).then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Profile updated successfully!');
                    } else {
                        alert('Failed to update profile.');
                    }
                }).catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while updating the profile.');
                });
        }

        function scrollToSection(sectionId) {
            const section = document.getElementById(sectionId);
            if (section) {
                section.scrollIntoView({ behavior: 'smooth' });
            }
        }

        // Add this new function for wallet linking
        function linkWallet() {
            const button = document.querySelector('.link-wallet');
            const statusSpan = document.getElementById('walletStatus');
            const balanceSpan = document.getElementById('walletBalance');
            
            // Disable button while processing
            button.disabled = true;
            button.textContent = 'Linking...';
            
            // Simulate API call with setTimeout
            setTimeout(() => {
                // Simulate successful API response
                const dummyResponse = {
                    success: true,
                    walletId: 'PAYTM' + Math.floor(Math.random() * 1000000),
                    balance: Math.floor(Math.random() * 10000),
                    status: 'Linked'
                };

                if (dummyResponse.success) {
                    // Update UI
                    statusSpan.textContent = dummyResponse.status;
                    statusSpan.style.color = '#008000'; // Green color for success
                    balanceSpan.textContent = `💰 ${dummyResponse.balance}`;
                    button.textContent = 'Wallet Linked';
                    button.style.backgroundColor = '#008000';
                    button.disabled = true;

                    // Show success message
                    alert(`Wallet successfully linked!\nWallet ID: ${dummyResponse.walletId}\nBalance: ₹${dummyResponse.balance}`);
                } else {
                    // Handle error
                    statusSpan.textContent = 'Link Failed';
                    statusSpan.style.color = '#FF0000';
                    button.textContent = 'Retry Linking';
                    button.disabled = false;
                    alert('Failed to link wallet. Please try again.');
                }
            }, 2000); // 2 second delay to simulate API call
        }

        // Initialize any event listeners when the DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            // Any initialization code can go here if needed
        });
    </script>
</body>
</html>
